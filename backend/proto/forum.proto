syntax = "proto3";

package forum;

option go_package = "backend/proto";

// Сервис для работы с постами
service PostService {
  rpc CreatePost(CreatePostRequest) returns (CreatePostResponse);
  rpc GetPost(GetPostRequest) returns (GetPostResponse);
  rpc DeletePost(DeletePostRequest) returns (DeletePostResponse);
  rpc ListPosts(ListPostsRequest) returns (ListPostsResponse);
}

// Сервис для работы с комментариями
service CommentService {
  rpc CreateComment(CreateCommentRequest) returns (CreateCommentResponse);
  rpc GetComment(GetCommentRequest) returns (GetCommentResponse);
  rpc DeleteComment(DeleteCommentRequest) returns (DeleteCommentResponse);
  rpc ListComments(ListCommentsRequest) returns (ListCommentsResponse);
}

// Сервис для работы с чатом
service ChatService {
  rpc SendMessage(SendMessageRequest) returns (SendMessageResponse);
  rpc GetMessages(GetMessagesRequest) returns (GetMessagesResponse);
  rpc StreamMessages(StreamMessagesRequest) returns (stream ChatMessage);
}

// Сообщения для PostService
message CreatePostRequest {
  string title = 1;
  string content = 2;
  int64 user_id = 3;
  int64 topic_id = 4;
}

message CreatePostResponse {
  int64 id = 1;
}

message GetPostRequest {
  int64 id = 1;
}

message GetPostResponse {
  int64 id = 1;
  string title = 2;
  string content = 3;
  int64 user_id = 4;
  int64 topic_id = 5;
  string created_at = 6;
  string updated_at = 7;
}

message DeletePostRequest {
  int64 id = 1;
}

message DeletePostResponse {
  bool success = 1;
}

message ListPostsRequest {
  int32 limit = 1;
  int32 offset = 2;
  int64 topic_id = 3;
}

message ListPostsResponse {
  repeated Post posts = 1;
  int32 total = 2;
}

message Post {
  int64 id = 1;
  string title = 2;
  string content = 3;
  int64 user_id = 4;
  int64 topic_id = 5;
  string created_at = 6;
  string updated_at = 7;
}

// Сообщения для CommentService
message CreateCommentRequest {
  int64 post_id = 1;
  int64 user_id = 2;
  string content = 3;
}

message CreateCommentResponse {
  int64 id = 1;
}

message GetCommentRequest {
  int64 id = 1;
}

message GetCommentResponse {
  int64 id = 1;
  int64 post_id = 2;
  int64 user_id = 3;
  string content = 4;
  string created_at = 5;
  string updated_at = 6;
}

message DeleteCommentRequest {
  int64 id = 1;
}

message DeleteCommentResponse {
  bool success = 1;
}

message ListCommentsRequest {
  int64 post_id = 1;
  int32 limit = 2;
  int32 offset = 3;
}

message ListCommentsResponse {
  repeated Comment comments = 1;
  int32 total = 2;
}

message Comment {
  int64 id = 1;
  int64 post_id = 2;
  int64 user_id = 3;
  string content = 4;
  string created_at = 5;
  string updated_at = 6;
}

// Сообщения для ChatService
message SendMessageRequest {
  int64 user_id = 1;
  string content = 2;
}

message SendMessageResponse {
  int64 id = 1;
  string created_at = 2;
}

message GetMessagesRequest {
  int32 limit = 1;
  int32 offset = 2;
}

message GetMessagesResponse {
  repeated ChatMessage messages = 1;
  int32 total = 2;
}

message StreamMessagesRequest {
  int64 last_message_id = 1;
}

message ChatMessage {
  int64 id = 1;
  int64 user_id = 2;
  string username = 3;
  string content = 4;
  string created_at = 5;
} 