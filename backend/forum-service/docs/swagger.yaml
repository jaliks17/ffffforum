definitions:
  entity.Comment:
    properties:
      author_id:
        example: 1
        type: integer
      author_name:
        description: Исправлено db:"-"
        type: string
      content:
        example: текст комментария
        type: string
      createdAt:
        type: string
      id:
        example: 1
        type: integer
      post_id:
        example: 1
        type: integer
    type: object
  entity.ErrorResponse:
    properties:
      error:
        example: error message
        type: string
    type: object
  entity.Post:
    properties:
      author_id:
        example: 456
        type: integer
      content:
        example: Post content text
        type: string
      created_at:
        example: "2023-01-01T00:00:00Z"
        type: string
      id:
        example: 123
        type: integer
      title:
        example: My Post Title
        type: string
    type: object
  entity.SuccessResponse:
    properties:
      message:
        example: success message
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/posts:
    get:
      consumes:
      - application/json
      description: Get list of all forum posts with pagination
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Posts per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.ErrorResponse'
      summary: Get all posts
      tags:
      - posts
  /api/v1/posts/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a forum post by ID (only author or admin can delete)
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entity.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/entity.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/entity.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete a post
      tags:
      - posts
    put:
      consumes:
      - application/json
      description: Update an existing forum post (only author can update)
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.Post'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Post'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entity.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/entity.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/entity.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update a post
      tags:
      - posts
  /api/v1/posts/{id}/comments:
    get:
      consumes:
      - application/json
      description: Get all comments for a specific post
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Comment'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.ErrorResponse'
      summary: Get comments for a post
      tags:
      - comments
    post:
      consumes:
      - application/json
      description: Create a new comment for a specific post
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      - description: Comment data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.Comment'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entity.Comment'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entity.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a new comment
      tags:
      - comments
swagger: "2.0"